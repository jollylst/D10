#!/usr/bin/env python3# Exercise: Presidents# Author GitHub usernames:# #1:# #2:# Instructions:# Write a program to:# (1) Load the data from presidents.txt into a dictionary.# (2) Print the years the greatest and least number of presidents were alive.#     (between 1732 and 2016 (inclusive))#     Ex.#       'least = 2015'#       'John Doe'#       'most = 2015'#       'John Doe, Jane Doe, John Adams, and Jane Adams'# Bonus: Confirm there are no ties. If there is a tie print like so:#     Ex.#       'least = 1900, 2013-2015'#       'John Doe (1900)'#       'Jane Doe (2013-2015)'#       'most = 1900-1934, 2013'#       'John Doe, Jane Doe, John Adams, and Jane Adams (1900-1933)'#       'Sally Doe, Billy Doe, Mary Doe, and Cary Doe (1934)'#       'Alice Doe, Bob Doe, Zane Doe, and Yi Do (2013)'# (3) Write your print statements to a file (greatest_least.txt) as well.# Upload that file as well.############################################################################### Imports# Bodydef create_dict():    with open('presidents.txt', 'r') as f:        lines = f.read().split('\r')        # print(lines)        d = {}        for line in lines:            name_year=line.split(',')            d[name_year[0]] = name_year[1:]           return ddef year_histogram(d):    lst = []    year_hist = {}    for c in d:        start_year = int(d[c][0])        if d[c][1] == 'None':            end_year = 2016        else:            end_year = int(d[c][1])        years_per_person = range(start_year, end_year)        year_hist[c] = years_per_person        lst.extend(years_per_person)    return lst, year_histdef print_years(lst):    lst, year_hist = year_histogram(create_dict())    d_year = {}       least_names = []    greatest_names = []           for year in lst:        if year not in d_year:            d_year[year] = 1        else:            d_year[year] += 1    d_year = sorted(d_year, key=d_year.__getitem__)    # print(d_year_2)    line_1 = ("Least = " + str(d_year[0]))    print(line_1)    for i in year_hist:        if d_year[0] in year_hist.get(i):            least_names.append(i)    line_2 = (', '.join(least_names))    print(line_2)    line_3 = ("Greatest = " + str(d_year[-1]))    print(line_3)    for I in year_hist:        if d_year[-1] in year_hist.get(I):            greatest_names.append(I)    line_4 = (', '.join(greatest_names))    print(line_4)    return line_1, line_2, line_3, line_4def write_statements():    line_1, line_2, line_3, line_4 = print_years(year_histogram(create_dict()))    with open('greatest_least.txt', 'w') as f:        f.write(line_1 + '\n' + line_2 +'\n' + line_3 + '\n' + line_4)##############################################################################def main():  # CALL YOUR FUNCTION BELOW    print_years(year_histogram(create_dict()))    write_statements()if __name__ == '__main__':    main()